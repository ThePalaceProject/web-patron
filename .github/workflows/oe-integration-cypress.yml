name: Open Ebooks Integration with Cypress
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on: [deployment_status]

jobs:
  cypress-tests:
    # only runs this job on successful deploy to Open Ebooks
    name: Cypress Tests
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && github.event.deployment_status.environment == 'Preview â€“ open-ebooks-web'
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Checkout
        uses: actions/checkout@v2
      - id: nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Cache NPM and Cypress ðŸ“¦
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: my-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install Cypress ðŸ“¥
        run: npm i cypress

      - name: Chrome desktop tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          browser: chrome
          spec: cypress/tests/open-ebooks/integration/**/*
        env:
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.target_url }}
          CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_PW }}
          CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_PW }}
          CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_PW }}
          CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_PW }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Chrome mobile tests
        uses: cypress-io/github-action@v2
        with:
          config: "viewportWidth=375,viewportHeight=667"
          install: false
          browser: chrome
          spec: cypress/tests/open-ebooks/integration/**/*
        env:
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.target_url }}
          CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_ALL_ACCESS_USER_PW }}
          CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_HIGH_SCHOOL_USER_PW }}
          CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_MIDDLE_GRADES_USER_PW }}
          CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_USERNAME: ${{ secrets.CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_USERNAME }}
          CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_PW: ${{ secrets.CYPRESS_OPENEBOOKS_EARLY_GRADES_USER_PW }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failure screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload failure videos
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
      
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#job-status-check-functions
      - name: Cypress tests âœ…
        if: ${{ success() }}
        # set the merge commit status check
        # using GitHub REST API
        # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --data '{
            "context": "Cypress Tests",
            "state": "success",
            "description": "Cypress tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: Cypress tests ðŸš¨
        if: ${{ failure() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --data '{
            "context": "Cypress Tests",
            "state": "failure",
            "description": "Cypress tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

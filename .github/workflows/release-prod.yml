# This workflow will tag and release the production branch
name: Production Release

# workflow will only run when a pull request to the production branch is closed.
on:
  pull_request:
    branches: [production]
    types: [closed]

jobs:
  release_master:
    name: Tag, Release and Publish
    # only run if PR is merged (not just closed)
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

        # the tag will match the package.json version (eg. v1.0.0)
      - name: Tag
        id: autotagger
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          strategy: package
          prefix: v
          # use the body of the PR commit as the tag message
          tag_message: ${{ github.event.pull_request.body }}

      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.autotagger.outputs.tagname }}
          release_name: ${{ steps.autotagger.outputs.tagname }}
          # use the body of the PR commit as the release body
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            thepalaceproject/web-patron:${{steps.autotagger.outputs.version}}
            thepalaceproject/web-patron:latest
          # allows us to install the private axisnow package
          build-args: |
            github_token=${{ secrets.GH_PACKAGES_TOKEN }}
